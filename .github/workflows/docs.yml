name: Build docs

on:
  push:
      branches:
        - master
  release:
      branches:
        - master
      
env:
    PYTHON_VERSION: 3.x

jobs:
  docs:
    name: Building Docs
    runs-on: ubuntu-latest

    steps:
      - name: LGTM
        run: echo "LGTM" #TODO, uncomment

    # steps:
    #   - uses: actions/checkout@v2
    #   - uses: actions/setup-python@v2
    #     with:
    #       python-version: 3.7
        
    #   - name: Install Reqs
    #     run: |
    #       python -m pip install --upgrade pip
    #       python -m pip install -r requirements/default.txt
    #       python -m pip install -r requirements/build-docs.txt
    #       python -m pip install .
          
    #   - name: Building Docs
    #     run: |        
    #       cd docs
    #       make clean
    #       make html

    #   - name: Upload Artifacts
    #     uses: actions/upload-artifact@v2
    #     with:
    #       name: docs
    #       path: docs/source/build/html


    # steps:
    #   - name: LGTM
    #     run: echo "LGTM" #TODO, uncomment
        
    # env:
    #   GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
    #   GIT_NAME: ${{ secrets.GIT_NAME }}
    #   GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
    # steps:
    #   - uses: actions/checkout@v2
    #   - uses: actions/setup-python@v2
    #     with:
    #       python-version: ${{ env.PYTHON_VERSION }}

    #   - name: Install Caer
    #     run: |
    #       python -m pip install --upgrade pip wheel
    #       pip install .[asyncio]
    #     if: success()

    #   - name: Install build deps
    #     run: |
    #       pip install -U mkdocs mkdocs-material mkdocs-git-revision-date-localized-plugin mkdocs-minify-plugin mkdocstrings mkdocs-exclude
    #     if: success()

    #   - name: Configure
    #     run: |
    #       REMOTE="https://${GIT_TOKEN}@github.com/${GITHUB_REPOSITORY}"
    #       git config --global user.name "${GIT_NAME}"
    #       git config --global user.email "${GIT_EMAIL}"
    #       git remote set-url origin ${REMOTE}
    #     if: success()

    #   - name: Deploy
    #     run: |
    #       mkdocs gh-deploy --force
    #       mkdocs --version
    #     if: success()